name: CI (bleeding-edge)
# weekly check for stability against dev version of
# - numpy
# - matplotlib,
# - scipy

on:
  push:
    branches:
    - main

  pull_request:
    paths:
    - .github/workflows/bleeding-edge.yml

  schedule:
    # run this once a week (wednesday) at 3 am UTC
  - cron: 0 3 * * 3

  workflow_dispatch:

jobs:
  tests:
    strategy:
      fail-fast: false

    runs-on: ubuntu-latest
    name: Test nightly dependencies

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
      with:
        python-version: '3.14'
        enable-cache: false
    - name: Configure uv
      run: |
        echo "UV_PRERELEASE=allow" >> $GITHUB_ENV
        echo "UV_INDEX=https://pypi.anaconda.org/scientific-python-nightly-wheels/simple" >> $GITHUB_ENV
        echo "UV_INDEX_STRATEGY=unsafe-best-match" >> $GITHUB_ENV

    # using pip compile + pip lock to workaround limitations of universal locking
    # in particular, this method is more reliable at ensuring we get nightly wheels
    # instead of building stable versions from source
    - name: Resolve and lock env
      run: |
        uv pip compile pyproject.toml \
          --all-extras --group test \
          --quiet \
          -o pylock.toml

    - name: Install env
      run: |
        uv venv
        uv pip sync pylock.toml
        uv pip install . --no-deps

    - name: Run pytest
      run: uv run --no-sync pytest --color=yes
